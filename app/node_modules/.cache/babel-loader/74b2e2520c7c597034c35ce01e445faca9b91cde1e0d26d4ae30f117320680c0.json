{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan62\\\\Downloads\\\\LestaAPI-v_2-main\\\\LestaAPI-v.2-main\\\\Project-LestaAPI-main\\\\app\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage({\n  onLogin,\n  onRegister\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isRegistering, setIsRegistering] = useState(false);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (isRegistering) {\n      // Здесь должна быть логика регистрации\n      console.log('Регистрация нового пользователя:', username);\n      // Предположим, что регистрация прошла успешно\n      setIsRegistering(false);\n      if (onRegister) {\n        onRegister(username, password);\n      }\n    } else {\n      // Здесь должна быть логика входа\n      if (onLogin) {\n        onLogin(username, password);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isRegistering ? 'Регистрация' : 'Авторизация'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: isRegistering ? 'Зарегистрироваться' : 'Войти'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsRegistering(!isRegistering),\n      children: isRegistering ? 'Уже есть аккаунт? Войти' : 'Создать аккаунт'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"iZmEDd1b3MavHsYnMXYngnFsn5g=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","onLogin","onRegister","_s","username","setUsername","password","setPassword","isRegistering","setIsRegistering","handleSubmit","event","preventDefault","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dan62/Downloads/LestaAPI-v_2-main/LestaAPI-v.2-main/Project-LestaAPI-main/app/src/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction LoginPage({ onLogin, onRegister }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (isRegistering) {\r\n      // Здесь должна быть логика регистрации\r\n      console.log('Регистрация нового пользователя:', username);\r\n      // Предположим, что регистрация прошла успешно\r\n      setIsRegistering(false);\r\n      if (onRegister) {\r\n        onRegister(username, password);\r\n      }\r\n    } else {\r\n      // Здесь должна быть логика входа\r\n      if (onLogin) {\r\n        onLogin(username, password);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>{isRegistering ? 'Регистрация' : 'Авторизация'}</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Имя пользователя:\r\n          <input\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </label>\r\n        <label>\r\n          Пароль:\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">{isRegistering ? 'Зарегистрироваться' : 'Войти'}</button>\r\n      </form>\r\n      <button onClick={() => setIsRegistering(!isRegistering)}>\r\n        {isRegistering ? 'Уже есть аккаунт? Войти' : 'Создать аккаунт'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,SAASA,CAAC;EAAEC,OAAO;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAMa,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIJ,aAAa,EAAE;MACjB;MACAK,OAAO,CAACC,GAAG,CAAC,kCAAkC,EAAEV,QAAQ,CAAC;MACzD;MACAK,gBAAgB,CAAC,KAAK,CAAC;MACvB,IAAIP,UAAU,EAAE;QACdA,UAAU,CAACE,QAAQ,EAAEE,QAAQ,CAAC;MAChC;IACF,CAAC,MAAM;MACL;MACA,IAAIL,OAAO,EAAE;QACXA,OAAO,CAACG,QAAQ,EAAEE,QAAQ,CAAC;MAC7B;IACF;EACF,CAAC;EAED,oBACEP,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAKP,aAAa,GAAG,aAAa,GAAG;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxDpB,OAAA;MAAMqB,QAAQ,EAAEV,YAAa;MAAAK,QAAA,gBAC3BhB,OAAA;QAAAgB,QAAA,GAAO,8FAEL,eAAAhB,OAAA;UACEsB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAElB,QAAS;UAChBmB,QAAQ,EAAGC,CAAC,IAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRpB,OAAA;QAAAgB,QAAA,GAAO,uCAEL,eAAAhB,OAAA;UACEsB,IAAI,EAAC,UAAU;UACfC,KAAK,EAAEhB,QAAS;UAChBiB,QAAQ,EAAGC,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRpB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAEP,aAAa,GAAG,oBAAoB,GAAG;MAAO;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3E,CAAC,eACPpB,OAAA;MAAQ2B,OAAO,EAAEA,CAAA,KAAMjB,gBAAgB,CAAC,CAACD,aAAa,CAAE;MAAAO,QAAA,EACrDP,aAAa,GAAG,yBAAyB,GAAG;IAAiB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAChB,EAAA,CAlDQH,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAoDlB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}