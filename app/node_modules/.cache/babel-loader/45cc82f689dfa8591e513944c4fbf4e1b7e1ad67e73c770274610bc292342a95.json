{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = `http://localhost:8000`;\nexport const fetchHistory = async () => {\n  try {\n    const response = await axios.get(`${API_BASE_URL}/history`);\n    return response.data;\n  } catch (error) {\n    console.error('Ошибка при получении истории запросов:', error);\n  }\n};\nexport const postNickname = async nickname => {\n  try {\n    const response = await fetch('http://localhost:8007/api/nickname', {\n      // Убедитесь, что URL соответствует вашему эндпоинту\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        nickname: nickname\n      }) // Поле 'nickname' включено в тело запроса\n    });\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    return await response.json(); // Обработка ответа\n  } catch (error) {\n    console.error('Ошибка при отправке никнейма:', error);\n  }\n};","map":{"version":3,"names":["axios","API_BASE_URL","fetchHistory","response","get","data","error","console","postNickname","nickname","fetch","method","headers","body","JSON","stringify","ok","Error","status","json"],"sources":["C:/Users/dan62/Downloads/LestaAPI-v_2-main/LestaAPI-v.2-main/Project-LestaAPI-main/app/src/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = `http://localhost:8000`;\r\n\r\nexport const fetchHistory = async () => {\r\n  try {\r\n    const response = await axios.get(`${API_BASE_URL}/history`);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error('Ошибка при получении истории запросов:', error);\r\n  }\r\n};\r\n\r\nexport const postNickname = async (nickname) => {\r\n  try {\r\n    const response = await fetch('http://localhost:8007/api/nickname', { // Убедитесь, что URL соответствует вашему эндпоинту\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({ nickname: nickname }) // Поле 'nickname' включено в тело запроса\r\n    });\r\n\r\n    if (!response.ok) {\r\n      throw new Error(`HTTP error! status: ${response.status}`);\r\n    }\r\n\r\n    return await response.json(); // Обработка ответа\r\n  } catch (error) {\r\n    console.error('Ошибка при отправке никнейма:', error);\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,uBAAuB;AAE5C,OAAO,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,YAAY,UAAU,CAAC;IAC3D,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;EAChE;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAOC,QAAQ,IAAK;EAC9C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMO,KAAK,CAAC,oCAAoC,EAAE;MAAE;MACnEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEN,QAAQ,EAAEA;MAAS,CAAC,CAAC,CAAC;IAC/C,CAAC,CAAC;IAEF,IAAI,CAACN,QAAQ,CAACa,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBd,QAAQ,CAACe,MAAM,EAAE,CAAC;IAC3D;IAEA,OAAO,MAAMf,QAAQ,CAACgB,IAAI,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOb,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;EACvD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}