{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan62\\\\Downloads\\\\LestaAPI-v_2-main\\\\LestaAPI-v.2-main\\\\Project-LestaAPI-main\\\\app\\\\src\\\\HistoryPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './HistoryPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HistoryPage = () => {\n  _s();\n  const [historyRecords, setHistoryRecords] = useState([]);\n  useEffect(() => {\n    const fetchHistoryRecords = async () => {\n      try {\n        const response = await fetch('https://your-backend-endpoint.com/history_records');\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const data = await response.json();\n        // Проверка, является ли data массивом\n        if (Array.isArray(data)) {\n          setHistoryRecords(data);\n        } else {\n          // Обработка случая, когда data не массив\n          console.error('Полученные данные не являются массивом:', data);\n        }\n      } catch (error) {\n        console.error('Возникла проблема с вашим fetch запросом: ', error);\n      }\n    };\n    fetchHistoryRecords();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u0418\\u0441\\u0442\\u043E\\u0440\\u0438\\u044F \\u0437\\u0430\\u043F\\u0440\\u043E\\u0441\\u043E\\u0432\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"thtd\",\n            children: \"# \\u0417\\u0430\\u043F\\u0440\\u043E\\u0441\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"thtd\",\n            children: \"\\u0414\\u0430\\u0442\\u0430 \\u0438 \\u0432\\u0440\\u0435\\u043C\\u044F \\u0437\\u0430\\u043F\\u0440\\u043E\\u0441\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"thtd\",\n            children: \"Nickname\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: Array.isArray(historyRecords) ? historyRecords.map(record => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"thtd\",\n            children: record.request_id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"thtd\",\n            children: record.request_date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"thtd\",\n            children: record.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, record.request_id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"3\",\n            className: \"thtd\",\n            children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u043E\\u0442\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => window.location.href = '/',\n      className: \"button\",\n      children: \"\\u0412\\u0435\\u0440\\u043D\\u0443\\u0442\\u044C\\u0441\\u044F \\u043A \\u043F\\u043E\\u0438\\u0441\\u043A\\u0443\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(HistoryPage, \"t5UtcSGgNBUBMCAx3lJcW9Oi9oE=\");\n_c = HistoryPage;\nexport default HistoryPage;\nvar _c;\n$RefreshReg$(_c, \"HistoryPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","HistoryPage","_s","historyRecords","setHistoryRecords","fetchHistoryRecords","response","fetch","ok","Error","status","data","json","Array","isArray","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","record","request_id","request_date","nickname","colSpan","onClick","window","location","href","_c","$RefreshReg$"],"sources":["C:/Users/dan62/Downloads/LestaAPI-v_2-main/LestaAPI-v.2-main/Project-LestaAPI-main/app/src/HistoryPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './HistoryPage.css';\r\n\r\nconst HistoryPage = () => {\r\n  const [historyRecords, setHistoryRecords] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchHistoryRecords = async () => {\r\n      try {\r\n        const response = await fetch('https://your-backend-endpoint.com/history_records');\r\n        if (!response.ok) {\r\n          throw new Error(`HTTP error! status: ${response.status}`);\r\n        }\r\n        const data = await response.json();\r\n        // Проверка, является ли data массивом\r\n        if (Array.isArray(data)) {\r\n          setHistoryRecords(data);\r\n        } else {\r\n          // Обработка случая, когда data не массив\r\n          console.error('Полученные данные не являются массивом:', data);\r\n        }\r\n      } catch (error) {\r\n        console.error('Возникла проблема с вашим fetch запросом: ', error);\r\n      }\r\n    };\r\n\r\n    fetchHistoryRecords();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>История запросов</h1>\r\n      <table className=\"table\">\r\n        <thead>\r\n          <tr>\r\n            <th className=\"thtd\"># Запроса</th>\r\n            <th className=\"thtd\">Дата и время запроса</th>\r\n            <th className=\"thtd\">Nickname</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {Array.isArray(historyRecords) ? (\r\n            historyRecords.map((record) => (\r\n              <tr key={record.request_id}>\r\n                <td className=\"thtd\">{record.request_id}</td>\r\n                <td className=\"thtd\">{record.request_date}</td>\r\n                <td className=\"thtd\">{record.nickname}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"3\" className=\"thtd\">Нет данных для отображения</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <br/>\r\n      <button onClick={() => window.location.href = '/'} className={\"button\"}>Вернуться к поиску</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAExDC,SAAS,CAAC,MAAM;IACd,MAAMO,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,CAAC;QACjF,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC3D;QACA,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QAClC;QACA,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;UACvBP,iBAAiB,CAACO,IAAI,CAAC;QACzB,CAAC,MAAM;UACL;UACAI,OAAO,CAACC,KAAK,CAAC,yCAAyC,EAAEL,IAAI,CAAC;QAChE;MACF,CAAC,CAAC,OAAOK,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,4CAA4C,EAAEA,KAAK,CAAC;MACpE;IACF,CAAC;IAEDX,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA;IAAAiB,QAAA,gBACEjB,OAAA;MAAAiB,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBrB,OAAA;MAAOsB,SAAS,EAAC,OAAO;MAAAL,QAAA,gBACtBjB,OAAA;QAAAiB,QAAA,eACEjB,OAAA;UAAAiB,QAAA,gBACEjB,OAAA;YAAIsB,SAAS,EAAC,MAAM;YAAAL,QAAA,EAAC;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACnCrB,OAAA;YAAIsB,SAAS,EAAC,MAAM;YAAAL,QAAA,EAAC;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9CrB,OAAA;YAAIsB,SAAS,EAAC,MAAM;YAAAL,QAAA,EAAC;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRrB,OAAA;QAAAiB,QAAA,EACGJ,KAAK,CAACC,OAAO,CAACX,cAAc,CAAC,GAC5BA,cAAc,CAACoB,GAAG,CAAEC,MAAM,iBACxBxB,OAAA;UAAAiB,QAAA,gBACEjB,OAAA;YAAIsB,SAAS,EAAC,MAAM;YAAAL,QAAA,EAAEO,MAAM,CAACC;UAAU;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7CrB,OAAA;YAAIsB,SAAS,EAAC,MAAM;YAAAL,QAAA,EAAEO,MAAM,CAACE;UAAY;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC/CrB,OAAA;YAAIsB,SAAS,EAAC,MAAM;YAAAL,QAAA,EAAEO,MAAM,CAACG;UAAQ;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAHpCG,MAAM,CAACC,UAAU;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAItB,CACL,CAAC,gBAEFrB,OAAA;UAAAiB,QAAA,eACEjB,OAAA;YAAI4B,OAAO,EAAC,GAAG;YAACN,SAAS,EAAC,MAAM;YAAAL,QAAA,EAAC;UAA0B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9D;MACL;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACRrB,OAAA;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLrB,OAAA;MAAQ6B,OAAO,EAAEA,CAAA,KAAMC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAI;MAACV,SAAS,EAAE,QAAS;MAAAL,QAAA,EAAC;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChG,CAAC;AAEV,CAAC;AAACnB,EAAA,CAzDID,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AA2DjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}