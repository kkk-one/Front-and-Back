{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dan62\\\\Downloads\\\\LestaAPI-v_2-main\\\\LestaAPI-v.2-main\\\\Project-LestaAPI-main\\\\app\\\\src\\\\LoginPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './LoginPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction LoginPage({\n  onLogin,\n  onRegister\n}) {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [isRegistering, setIsRegistering] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        onLogin(data);\n      } else {\n        setErrorMessage('Неверное имя пользователя или пароль');\n      }\n    } catch (error) {\n      setErrorMessage('Ошибка при авторизации');\n      console.error('Ошибка при авторизации:', error);\n    }\n  };\n  const handleRegister = async () => {\n    try {\n      const response = await fetch('/api/register', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        onRegister(data);\n      } else {\n        setErrorMessage('Ошибка при регистрации');\n      }\n    } catch (error) {\n      setErrorMessage('Ошибка при регистрации');\n      console.error('Ошибка при регистрации:', error);\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (isRegistering) {\n      handleRegister();\n    } else {\n      handleLogin();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isRegistering ? 'Регистрация' : 'Авторизация'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"login-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"\\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-input\",\n          type: \"text\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"form-label\",\n          children: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-input\",\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login-button\",\n        type: \"submit\",\n        children: isRegistering ? 'Зарегистрироваться' : 'Войти'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"toggle-button\",\n      onClick: () => setIsRegistering(!isRegistering),\n      children: isRegistering ? 'Уже есть аккаунт? Войти' : 'Создать аккаунт'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n_s(LoginPage, \"XZFeUmsteMbvZGq8cTM+CXY4yzA=\");\n_c = LoginPage;\nexport default LoginPage;\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LoginPage","onLogin","onRegister","_s","username","setUsername","password","setPassword","isRegistering","setIsRegistering","errorMessage","setErrorMessage","handleLogin","response","fetch","method","headers","body","JSON","stringify","ok","data","json","error","console","handleRegister","handleSubmit","event","preventDefault","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/dan62/Downloads/LestaAPI-v_2-main/LestaAPI-v.2-main/Project-LestaAPI-main/app/src/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './LoginPage.css';\r\n\r\nfunction LoginPage({ onLogin, onRegister }) {\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await fetch('/api/login', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        onLogin(data);\r\n      } else {\r\n        setErrorMessage('Неверное имя пользователя или пароль');\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Ошибка при авторизации');\r\n      console.error('Ошибка при авторизации:', error);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    try {\r\n      const response = await fetch('/api/register', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        onRegister(data);\r\n      } else {\r\n        setErrorMessage('Ошибка при регистрации');\r\n      }\r\n    } catch (error) {\r\n      setErrorMessage('Ошибка при регистрации');\r\n      console.error('Ошибка при регистрации:', error);\r\n    }\r\n  };\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    if (isRegistering) {\r\n      handleRegister();\r\n    } else {\r\n      handleLogin();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>{isRegistering ? 'Регистрация' : 'Авторизация'}</h2>\r\n      {errorMessage && <p className=\"error-message\">{errorMessage}</p>}\r\n      <form className=\"login-form\" onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">\r\n            Имя пользователя:\r\n          </label>\r\n          <input\r\n            className=\"login-input\"\r\n            type=\"text\"\r\n            value={username}\r\n            onChange={(e) => setUsername(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label className=\"form-label\">\r\n            Пароль:\r\n          </label>\r\n          <input\r\n            className=\"login-input\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n        </div>\r\n        <button className=\"login-button\" type=\"submit\">\r\n          {isRegistering ? 'Зарегистрироваться' : 'Войти'}\r\n        </button>\r\n      </form>\r\n      <button className=\"toggle-button\" onClick={() => setIsRegistering(!isRegistering)}>\r\n        {isRegistering ? 'Уже есть аккаунт? Войти' : 'Создать аккаунт'}\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default LoginPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAC;EAAEC,OAAO;EAAEC;AAAW,CAAC,EAAE;EAAAC,EAAA;EAC1C,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMe,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,EAAE;QACzCC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,QAAQ;UAAEE;QAAS,CAAC;MAC7C,CAAC,CAAC;MACF,IAAIO,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCrB,OAAO,CAACoB,IAAI,CAAC;MACf,CAAC,MAAM;QACLV,eAAe,CAAC,sCAAsC,CAAC;MACzD;IACF,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdZ,eAAe,CAAC,wBAAwB,CAAC;MACzCa,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EAED,MAAME,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,eAAe,EAAE;QAC5CC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEf,QAAQ;UAAEE;QAAS,CAAC;MAC7C,CAAC,CAAC;MACF,IAAIO,QAAQ,CAACO,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QAClCpB,UAAU,CAACmB,IAAI,CAAC;MAClB,CAAC,MAAM;QACLV,eAAe,CAAC,wBAAwB,CAAC;MAC3C;IACF,CAAC,CAAC,OAAOY,KAAK,EAAE;MACdZ,eAAe,CAAC,wBAAwB,CAAC;MACzCa,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD;EACF,CAAC;EACD,MAAMG,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtB,IAAIpB,aAAa,EAAE;MACjBiB,cAAc,CAAC,CAAC;IAClB,CAAC,MAAM;MACLb,WAAW,CAAC,CAAC;IACf;EACF,CAAC;EAED,oBACEb,OAAA;IAAK8B,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9B/B,OAAA;MAAA+B,QAAA,EAAKtB,aAAa,GAAG,aAAa,GAAG;IAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACvDxB,YAAY,iBAAIX,OAAA;MAAG8B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEpB;IAAY;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChEnC,OAAA;MAAM8B,SAAS,EAAC,YAAY;MAACM,QAAQ,EAAET,YAAa;MAAAI,QAAA,gBAClD/B,OAAA;QAAK8B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB/B,OAAA;UAAO8B,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAE9B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRnC,OAAA;UACE8B,SAAS,EAAC,aAAa;UACvBO,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEjC,QAAS;UAChBkC,QAAQ,EAAGC,CAAC,IAAKlC,WAAW,CAACkC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNnC,OAAA;QAAK8B,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzB/B,OAAA;UAAO8B,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAE9B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRnC,OAAA;UACE8B,SAAS,EAAC,aAAa;UACvBO,IAAI,EAAC,UAAU;UACfC,KAAK,EAAE/B,QAAS;UAChBgC,QAAQ,EAAGC,CAAC,IAAKhC,WAAW,CAACgC,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNnC,OAAA;QAAQ8B,SAAS,EAAC,cAAc;QAACO,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAC3CtB,aAAa,GAAG,oBAAoB,GAAG;MAAO;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACPnC,OAAA;MAAQ8B,SAAS,EAAC,eAAe;MAACY,OAAO,EAAEA,CAAA,KAAMhC,gBAAgB,CAAC,CAACD,aAAa,CAAE;MAAAsB,QAAA,EAC/EtB,aAAa,GAAG,yBAAyB,GAAG;IAAiB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAAC/B,EAAA,CA5FQH,SAAS;AAAA0C,EAAA,GAAT1C,SAAS;AA8FlB,eAAeA,SAAS;AAAC,IAAA0C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}